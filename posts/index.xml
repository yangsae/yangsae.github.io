<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on blog</title>
    <link>https://yangsae.github.io/posts/</link>
    <description>Recent content in Posts on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright 2019 saerohoon yang</copyright>
    <lastBuildDate>Thu, 16 May 2019 15:12:52 +0900</lastBuildDate>
    
	<atom:link href="https://yangsae.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Springboot</title>
      <link>https://yangsae.github.io/posts/springboot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yangsae.github.io/posts/springboot/</guid>
      <description>Spring Boot 코드 구조 Main Application Class  메인 클래스는 다른 클래스들의 최상위의 root package에 위치  com +- example +- myapplication +- Application.java | +- customer | +- Customer.java | +- CustomerController.java | +- CustomerService.java | +- CustomerRepository.java | +- order +- Order.java +- OrderController.java +- OrderService.java +- OrderRepository.java  Application.java 파일에 @SpringBootApplication 어노테이션으로 main 메소드를 선언
 @SpringBootApplication 어노테이션은 root package를 이용해 @Entity 아이템들을 검색함 @SpringBootApplication 어노테이션은 @EnableAutoConfiguration과 @ComponentScan 어노테이션 둘의 역할을 함  package com.</description>
    </item>
    
    <item>
      <title>Documentation</title>
      <link>https://yangsae.github.io/posts/documentation/</link>
      <pubDate>Thu, 16 May 2019 15:12:52 +0900</pubDate>
      
      <guid>https://yangsae.github.io/posts/documentation/</guid>
      <description>What nobody tells you about documentation What nobody tells you about documentation를 번역한 글 정리
서론 좋은 문서를 만들기 위해 노력하지만 그 방향이 틀렸기 때문에 실패하는 경우가 많다. 문서화를 지배하는 몇 가지 원칙이 존재하며 아래에 소개한다.
비결 문서는 크게 아래와 같이 구분하고 그에 알맞는 구조를 가져야 한다. 더불어 서로 다른 접근 방법으로 작성한다.
 Tutorial
 How-to guide 해설(Explanation) 기술 레퍼런스(Technical reference)
  Tutorial 초보가 제품 사용을 시작할 수 있게 하는 강좌로 학습 위주로 이루어져야 한다.</description>
    </item>
    
    <item>
      <title>쿠버네티스란 무엇인가</title>
      <link>https://yangsae.github.io/posts/test-post/</link>
      <pubDate>Tue, 14 May 2019 19:05:52 +0900</pubDate>
      
      <guid>https://yangsae.github.io/posts/test-post/</guid>
      <description> 쿠버네티스란? 쿠버네티스의 개요 등을 설명
개요  [컨테이너]()화된 워크로드와 서비스를 관리하기 위한 이식성이 있고 확장 가능한 오픈소스 플랫폼 선언적 구성과 자동화를 용이하게 함 구글이 2014년에 오픈소스화  필요성  컨테이너 플랫폼 하는 일 쿠버네티스가 아닌 것 왜 컨테이너인가 의미  </description>
    </item>
    
  </channel>
</rss>