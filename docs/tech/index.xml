<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog</title>
    <link>https://yangsae.github.io/docs/tech/</link>
    <description>Recent content on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright 2019 saerohoon yang</copyright>
    
	<atom:link href="https://yangsae.github.io/docs/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubernetes</title>
      <link>https://yangsae.github.io/docs/tech/kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yangsae.github.io/docs/tech/kubernetes/</guid>
      <description>쿠버네티스란? 쿠버네티스의 개요 등을 설명
개요  컨테이너화된 워크로드와 서비스를 관리하기 위한 이식성이 있고 확장 가능한 오픈소스 플랫폼 선언적 구성과 자동화를 용이하게 함 구글이 2014년에 오픈소스화  필요성  컨테이너 플랫폼 마이크로 서비스 이식성 있는 클라우드 플랫폼 기타 더 많은 기능  하는 일  컨테이너 중심의 관리 환경 제공  사용자 워크로드를 위해 컴퓨팅, 네트워킹, 스토리지 인프라 스트럭처를 오케스트레이션 PaaS(Platform as a Service)의 단순 명료함에 IaaS(Infrastructure as a Service)의 유연함을 더함   쿠버네티스가 아닌 것 브라블라</description>
    </item>
    
    <item>
      <title>Springboot</title>
      <link>https://yangsae.github.io/docs/tech/springboot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yangsae.github.io/docs/tech/springboot/</guid>
      <description> Spring Boot 코드 구조 Main Application Class  메인 클래스는 다른 클래스들의 최상위의 root package에 위치
com +- example +- myapplication +- Application.java | +- customer | +- Customer.java | +- CustomerController.java | +- CustomerService.java | +- CustomerRepository.java | +- order +- Order.java +- OrderController.java +- OrderService.java +- OrderRepository.java
  </description>
    </item>
    
  </channel>
</rss>